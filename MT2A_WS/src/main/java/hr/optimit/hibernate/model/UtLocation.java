package hr.optimit.hibernate.model;

import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

// TODO: Auto-generated Javadoc
/**
 * UtLocation generated by hbm2java.
 */
@Entity
@Table(name = "UT_LOCATION")
public class UtLocation implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/** The location id. */
	private Long locationId;
	
	/** The ut partner. */
	private UtPartner utPartner;
	
	/** The location name. */
	private String locationName;
	
	/** The location description. */
	private String locationDescription;
	
	/** The location active. */
	private String locationActive;
	
	/** The sys modification timestamp. */
	private Timestamp sysModificationTimestamp;
	
	/** The sys modification user. */
	private Long sysModificationUser;
	
	/** The ut activities. */
	private Set<UtActivity> utActivities = new HashSet<UtActivity>(0);

	/**
	 * Instantiates a new ut location.
	 */
	public UtLocation() {
	}

	/**
	 * Instantiates a new ut location.
	 *
	 * @param locationId the location id
	 * @param locationName the location name
	 * @param locationActive the location active
	 * @param sysModificationTimestamp the sys modification timestamp
	 * @param sysModificationUser the sys modification user
	 */
	public UtLocation(Long locationId, String locationName, String locationActive,
			Timestamp sysModificationTimestamp, Long sysModificationUser) {
		this.locationId = locationId;
		this.locationName = locationName;
		this.locationActive = locationActive;
		this.sysModificationTimestamp = sysModificationTimestamp;
		this.sysModificationUser = sysModificationUser;
	}

	/**
	 * Instantiates a new ut location.
	 *
	 * @param locationId the location id
	 * @param utPartner the ut partner
	 * @param locationName the location name
	 * @param locationDescription the location description
	 * @param locationActive the location active
	 * @param sysModificationTimestamp the sys modification timestamp
	 * @param sysModificationUser the sys modification user
	 * @param utActivities the ut activities
	 */
	public UtLocation(Long locationId, UtPartner utPartner, String locationName, String locationDescription,
			String locationActive, Timestamp sysModificationTimestamp, Long sysModificationUser,
			Set<UtActivity> utActivities) {
		this.locationId = locationId;
		this.utPartner = utPartner;
		this.locationName = locationName;
		this.locationDescription = locationDescription;
		this.locationActive = locationActive;
		this.sysModificationTimestamp = sysModificationTimestamp;
		this.sysModificationUser = sysModificationUser;
		this.utActivities = utActivities;
	}

	/**
	 * Gets the location id.
	 *
	 * @return the location id
	 */
	@Id
	@Column(name = "LOCATION_ID", unique = true, nullable = false)
	public Long getLocationId() {
		return this.locationId;
	}

	/**
	 * Sets the location id.
	 *
	 * @param locationId the new location id
	 */
	public void setLocationId(Long locationId) {
		this.locationId = locationId;
	}

	/**
	 * Gets the ut partner.
	 *
	 * @return the ut partner
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LOCATION_PARTNER_ID")
	public UtPartner getUtPartner() {
		return this.utPartner;
	}

	/**
	 * Sets the ut partner.
	 *
	 * @param utPartner the new ut partner
	 */
	public void setUtPartner(UtPartner utPartner) {
		this.utPartner = utPartner;
	}

	/**
	 * Gets the location name.
	 *
	 * @return the location name
	 */
	@Column(name = "LOCATION_NAME", nullable = false, length = 100)
	public String getLocationName() {
		return this.locationName;
	}

	/**
	 * Sets the location name.
	 *
	 * @param locationName the new location name
	 */
	public void setLocationName(String locationName) {
		this.locationName = locationName;
	}

	/**
	 * Gets the location description.
	 *
	 * @return the location description
	 */
	@Column(name = "LOCATION_DESCRIPTION", length = 2000)
	public String getLocationDescription() {
		return this.locationDescription;
	}

	/**
	 * Sets the location description.
	 *
	 * @param locationDescription the new location description
	 */
	public void setLocationDescription(String locationDescription) {
		this.locationDescription = locationDescription;
	}

	/**
	 * Gets the location active.
	 *
	 * @return the location active
	 */
	@Column(name = "LOCATION_ACTIVE", nullable = false, length = 10)
	public String getLocationActive() {
		return this.locationActive;
	}

	/**
	 * Sets the location active.
	 *
	 * @param locationActive the new location active
	 */
	public void setLocationActive(String locationActive) {
		this.locationActive = locationActive;
	}

	/**
	 * Gets the sys modification timestamp.
	 *
	 * @return the sys modification timestamp
	 */
	@Column(name = "SYS_MODIFICATION_TIMESTAMP", nullable = false)
	public Timestamp getSysModificationTimestamp() {
		return this.sysModificationTimestamp;
	}

	/**
	 * Sets the sys modification timestamp.
	 *
	 * @param sysModificationTimestamp the new sys modification timestamp
	 */
	public void setSysModificationTimestamp(Timestamp sysModificationTimestamp) {
		this.sysModificationTimestamp = sysModificationTimestamp;
	}

	/**
	 * Gets the sys modification user.
	 *
	 * @return the sys modification user
	 */
	@Column(name = "SYS_MODIFICATION_USER", nullable = false)
	public Long getSysModificationUser() {
		return this.sysModificationUser;
	}

	/**
	 * Sets the sys modification user.
	 *
	 * @param sysModificationUser the new sys modification user
	 */
	public void setSysModificationUser(Long sysModificationUser) {
		this.sysModificationUser = sysModificationUser;
	}

	/**
	 * Gets the ut activities.
	 *
	 * @return the ut activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utLocation")
	public Set<UtActivity> getUtActivities() {
		return this.utActivities;
	}

	/**
	 * Sets the ut activities.
	 *
	 * @param utActivities the new ut activities
	 */
	public void setUtActivities(Set<UtActivity> utActivities) {
		this.utActivities = utActivities;
	}

}
