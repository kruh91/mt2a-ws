package hr.optimit.hibernate.model;

import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

// TODO: Auto-generated Javadoc
/**
 * UtProject generated by hbm2java.
 */
@Entity
@Table(name = "UT_PROJECT")
public class UtProject implements java.io.Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;
	
	/** The project id. */
	private Long projectId;
	
	/** The ut partner. */
	private UtPartner utPartner;
	
	/** The project shortname. */
	private String projectShortname;
	
	/** The project name. */
	private String projectName;
	
	/** The project description. */
	private String projectDescription;
	
	/** The project start date. */
	private Date projectStartDate;
	
	/** The project end date. */
	private Date projectEndDate;
	
	/** The project billable. */
	private String projectBillable;
	
	/** The sys modification timestamp. */
	private Timestamp sysModificationTimestamp;
	
	/** The sys modification user. */
	private ApnaUser sysModificationUser;
	
	/** The ut tasks. */
	private Set<UtTask> utTasks = new HashSet<UtTask>(0);
	
	/** The ut user2projects. */
	private Set<UtUser2project> utUser2projects = new HashSet<UtUser2project>(0);

	/**
	 * Instantiates a new ut project.
	 */
	public UtProject() {
	}

	/**
	 * Instantiates a new ut project.
	 *
	 * @param projectId the project id
	 * @param projectShortname the project shortname
	 * @param projectStartDate the project start date
	 * @param projectBillable the project billable
	 * @param sysModificationTimestamp the sys modification timestamp
	 * @param sysModificationUser the sys modification user
	 */
	public UtProject(Long projectId, String projectShortname, Date projectStartDate, String projectBillable,
			Timestamp sysModificationTimestamp, ApnaUser sysModificationUser) {
		this.projectId = projectId;
		this.projectShortname = projectShortname;
		this.projectStartDate = projectStartDate;
		this.projectBillable = projectBillable;
		this.sysModificationTimestamp = sysModificationTimestamp;
		this.sysModificationUser = sysModificationUser;
	}

	/**
	 * Instantiates a new ut project.
	 *
	 * @param projectId the project id
	 * @param utPartner the ut partner
	 * @param projectShortname the project shortname
	 * @param projectName the project name
	 * @param projectDescription the project description
	 * @param projectStartDate the project start date
	 * @param projectEndDate the project end date
	 * @param projectBillable the project billable
	 * @param sysModificationTimestamp the sys modification timestamp
	 * @param sysModificationUser the sys modification user
	 * @param utTasks the ut tasks
	 * @param utUser2projects the ut user2projects
	 */
	public UtProject(Long projectId, UtPartner utPartner, String projectShortname, String projectName,
			String projectDescription, Date projectStartDate, Date projectEndDate, String projectBillable,
			Timestamp sysModificationTimestamp, ApnaUser sysModificationUser, Set<UtTask> utTasks, Set<UtUser2project> utUser2projects) {
		this.projectId = projectId;
		this.utPartner = utPartner;
		this.projectShortname = projectShortname;
		this.projectName = projectName;
		this.projectDescription = projectDescription;
		this.projectStartDate = projectStartDate;
		this.projectEndDate = projectEndDate;
		this.projectBillable = projectBillable;
		this.sysModificationTimestamp = sysModificationTimestamp;
		this.sysModificationUser = sysModificationUser;
		this.utTasks = utTasks;
		this.utUser2projects = utUser2projects;
	}

	/**
	 * Gets the project id.
	 *
	 * @return the project id
	 */
	@Id
	@Column(name = "PROJECT_ID", unique = true, nullable = false)
	public Long getProjectId() {
		return this.projectId;
	}

	/**
	 * Sets the project id.
	 *
	 * @param projectId the new project id
	 */
	public void setProjectId(Long projectId) {
		this.projectId = projectId;
	}

	/**
	 * Gets the ut partner.
	 *
	 * @return the ut partner
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROJECT_PARTNER_ID")
	public UtPartner getUtPartner() {
		return this.utPartner;
	}

	/**
	 * Sets the ut partner.
	 *
	 * @param utPartner the new ut partner
	 */
	public void setUtPartner(UtPartner utPartner) {
		this.utPartner = utPartner;
	}

	/**
	 * Gets the project shortname.
	 *
	 * @return the project shortname
	 */
	@Column(name = "PROJECT_SHORTNAME", nullable = false, length = 20)
	public String getProjectShortname() {
		return this.projectShortname;
	}

	/**
	 * Sets the project shortname.
	 *
	 * @param projectShortname the new project shortname
	 */
	public void setProjectShortname(String projectShortname) {
		this.projectShortname = projectShortname;
	}

	/**
	 * Gets the project name.
	 *
	 * @return the project name
	 */
	@Column(name = "PROJECT_NAME", length = 200)
	public String getProjectName() {
		return this.projectName;
	}

	/**
	 * Sets the project name.
	 *
	 * @param projectName the new project name
	 */
	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}

	/**
	 * Gets the project description.
	 *
	 * @return the project description
	 */
	@Column(name = "PROJECT_DESCRIPTION", length = 2000)
	public String getProjectDescription() {
		return this.projectDescription;
	}

	/**
	 * Sets the project description.
	 *
	 * @param projectDescription the new project description
	 */
	public void setProjectDescription(String projectDescription) {
		this.projectDescription = projectDescription;
	}

	/**
	 * Gets the project start date.
	 *
	 * @return the project start date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PROJECT_START_DATE", nullable = false, length = 21)
	public Date getProjectStartDate() {
		return this.projectStartDate;
	}

	/**
	 * Sets the project start date.
	 *
	 * @param projectStartDate the new project start date
	 */
	public void setProjectStartDate(Date projectStartDate) {
		this.projectStartDate = projectStartDate;
	}

	/**
	 * Gets the project end date.
	 *
	 * @return the project end date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PROJECT_END_DATE", length = 21)
	public Date getProjectEndDate() {
		return this.projectEndDate;
	}

	/**
	 * Sets the project end date.
	 *
	 * @param projectEndDate the new project end date
	 */
	public void setProjectEndDate(Date projectEndDate) {
		this.projectEndDate = projectEndDate;
	}

	/**
	 * Gets the project billable.
	 *
	 * @return the project billable
	 */
	@Column(name = "PROJECT_BILLABLE", nullable = false, length = 20)
	public String getProjectBillable() {
		return this.projectBillable;
	}

	/**
	 * Sets the project billable.
	 *
	 * @param projectBillable the new project billable
	 */
	public void setProjectBillable(String projectBillable) {
		this.projectBillable = projectBillable;
	}

	/**
	 * Gets the sys modification timestamp.
	 *
	 * @return the sys modification timestamp
	 */
	@Column(name = "SYS_MODIFICATION_TIMESTAMP", nullable = false)
	public Timestamp getSysModificationTimestamp() {
		return this.sysModificationTimestamp;
	}

	/**
	 * Sets the sys modification timestamp.
	 *
	 * @param sysModificationTimestamp the new sys modification timestamp
	 */
	public void setSysModificationTimestamp(Timestamp sysModificationTimestamp) {
		this.sysModificationTimestamp = sysModificationTimestamp;
	}

	/**
	 * Gets the sys modification user.
	 *
	 * @return the sys modification user
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SYS_MODIFICATION_USER", nullable = false)
	public ApnaUser getSysModificationUser() {
		return this.sysModificationUser;
	}

	/**
	 * Sets the sys modification user.
	 *
	 * @param sysModificationUser the new sys modification user
	 */
	public void setSysModificationUser(ApnaUser sysModificationUser) {
		this.sysModificationUser = sysModificationUser;
	}

	/**
	 * Gets the ut tasks.
	 *
	 * @return the ut tasks
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utProject")
	public Set<UtTask> getUtTasks() {
		return this.utTasks;
	}

	/**
	 * Sets the ut tasks.
	 *
	 * @param utTasks the new ut tasks
	 */
	public void setUtTasks(Set<UtTask> utTasks) {
		this.utTasks = utTasks;
	}

	/**
	 * Gets the ut user2projects.
	 *
	 * @return the ut user2projects
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utProject")
	public Set<UtUser2project> getUtUser2projects() {
		return this.utUser2projects;
	}

	/**
	 * Sets the ut user2projects.
	 *
	 * @param utUser2projects the new ut user2projects
	 */
	public void setUtUser2projects(Set<UtUser2project> utUser2projects) {
		this.utUser2projects = utUser2projects;
	}

}
